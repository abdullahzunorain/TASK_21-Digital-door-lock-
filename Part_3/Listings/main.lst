C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2024 12:40:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "eeprom.h"
   3          #include "LCD.h"
   4          #include "KEYPAD.h"
   5          
   6          #define generate_password 0
   7          #define enter_password 1
   8          #define wrong_password 2
   9          #define new_password 3
  10          
  11          
  12          
  13          unsigned char gent_password[6];
  14          unsigned char j=0,value,i=0;
  15          unsigned char data_read,second=10,Flag=0,Flag1=0;
  16          unsigned char password[6];
  17          unsigned char EEPROM_password,user_pin;
  18          unsigned char old_pin,key;
  19          unsigned char user_password[6];
  20          unsigned char EEPROM[6];
  21          unsigned char EEPROM_Pass;
  22          unsigned char old_password[6];
  23          
  24          // Function prototypes
  25          void EEPROM_write(unsigned char address, unsigned char dataa);
  26          //void EEPROM_write();
  27          unsigned char EEPROM_read(unsigned char address);
  28          unsigned char keypad(void);
  29          void Timmer_Delay();
  30          
  31          unsigned int on_period, off_period;
  32          sbit servomotor_pin = P2^0;
  33          
  34          void timer_init() {
  35   1          TMOD = 0x01;
  36   1          TH0 = 0xB7;
  37   1          TL0 = 0xFE;
  38   1          TR0 = 1;
  39   1          EA = 1;
  40   1          ET0 = 1;
  41   1      }
  42          
  43          void timer0() interrupt 1 {
  44   1          servomotor_pin = ~servomotor_pin;
  45   1          if(servomotor_pin) {
  46   2              TH0 = on_period >> 8;
  47   2              TL0 = on_period;
  48   2          } else {
  49   2              TH0 = off_period >> 8;
  50   2              TL0 = off_period;
  51   2          }
  52   1      }
  53          
  54          void set_duty_cycle(float angle) {
C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2024 12:40:49 PAGE 2   

  55   1          float duty_cycle;
  56   1          unsigned int period;
  57   1          duty_cycle = (angle / 180.0) * 10.0;
  58   1          period = 65535 - 0xB7FE;
  59   1          on_period = (unsigned int)((period / 100.0) * duty_cycle);
  60   1          off_period = period - on_period;
  61   1          on_period = 65535 - on_period;
  62   1          off_period = 65535 - off_period;
  63   1      }
  64          
  65          
  66          
  67          
  68          
  69          void randompassword() {
  70   1          gent_password[j] = keypad();
  71   1          EEPROM_write(j, gent_password[j]);
  72   1          lcd_showchar(1, j, gent_password[j]);
  73   1      }
  74          
  75          
  76          
  77          void main(void) {
  78   1          unsigned char current_state;
  79   1          lcd_init();
  80   1          timer_init();
  81   1          current_state = generate_password;
  82   1          while(1) {
  83   2              switch(current_state) {
  84   3                  case generate_password:
  85   3                      value = EEPROM_read(212);
  86   3                      if(value == 0xFF) {
  87   4                          lcd_showstring(0, 0, "Generate Pin");
  88   4                          if(j < 6) {
  89   5                              randompassword();
  90   5                              j++;
  91   5                          } else {
  92   5                              EEPROM_write(212, 0xAA);
  93   5                              j = 0;
  94   5                              current_state = enter_password;
  95   5                              Timmer_Delay(3000);
*** ERROR C267 IN LINE 95 OF main.c: 'Timmer_Delay': requires ANSI-style prototype
  96   5                          }
  97   4                      } else {
  98   4                          current_state = enter_password;
  99   4                      }
 100   3                      break;
 101   3      
 102   3                  case enter_password:
 103   3                      lcd_clear();
 104   3                      data_read = EEPROM_read(254);
 105   3                      if(data_read != 6) {
 106   4                          for(i = 0; i < 6; i++) {
 107   5                              password[i] = EEPROM_read(i);
 108   5                          }
 109   4                          EEPROM_password = (password[5]*100000) + (password[4]*10000) + (password[3]*1000) + (p
             -assword[2]*100) + (password[1]*10) + (password[0]);
 110   4                          lcd_showstring(0, 0, "Enter Password");
 111   4                          for(i = 0; i < 6; i++) {
 112   5                              key = keypad();
 113   5                              if(key == 'c') {
 114   6                                  current_state = new_password;
C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2024 12:40:49 PAGE 3   

 115   6                                  break;
 116   6                              } else {
 117   6                                  user_password[i] = key;
 118   6                              }
 119   5                              lcd_showchar(1, i, user_password[i]);
 120   5                          }
 121   4                          Delay1(2000);
 122   4                          user_pin = (user_password[5]*100000) + (user_password[4]*10000) + (user_password[3]*10
             -00) + (user_password[2]*100) + (user_password[1]*10) + (user_password[0]);
 123   4                          if(current_state == new_password) {
 124   5                              break;
 125   5                          }
 126   4                          if(EEPROM_password == user_pin) {
 127   5                              lcd_clear();
 128   5                              lcd_showstring(0, 0, "Door Unlock");
 129   5                              Beep(5);
 130   5                              Delay1(1000);
 131   5                              set_duty_cycle(0.0);
 132   5                              Delay1(500);
 133   5                              for(i = 0; i < 10; i++) {
 134   6                                  second--;
 135   6                                  lcd_shownum(1, 6, second, 1);
 136   6                                  Timmer_Delay(160);
 137   6                              }
 138   5                              Beep(5);
 139   5                              lcd_clear();
 140   5                              lcd_showstring(0, 0, "Door Lock");
 141   5                              set_duty_cycle(180.0);
 142   5                              Delay1(2000);
 143   5                              lcd_clear();
 144   5                              Flag = 0;
 145   5                              second = 10;
 146   5                              current_state = enter_password;
 147   5                          } else {
 148   5                              current_state = wrong_password;
 149   5                          }
 150   4                      } else {
 151   4                          lcd_showstring(0, 0, "System Disabled");
 152   4                          Beep(5000);
 153   4                      }
 154   3                      break;
 155   3      
 156   3                  case wrong_password:
 157   3                      if(Flag < 5) {
 158   4                          lcd_clear();
 159   4                          lcd_showstring(0, 0, "Wrong Password");
 160   4                          lcd_shownum(1, 5, Flag, 1);
 161   4                          Beep(10);
 162   4                          Flag++;
 163   4                          current_state = enter_password;
 164   4                      } else {
 165   4                          EEPROM_write(250, 6);
 166   4                          lcd_clear();
 167   4                          lcd_showstring(0, 0, "System Disabled");
 168   4                          Beep(5000);
 169   4                      }
 170   3                      break;
 171   3      
 172   3                  case new_password:
 173   3                      lcd_clear();
 174   3                      lcd_showstring(0, 0, "Enter Old Pin");
 175   3                      for(i = 0; i < 6; i++) {
C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2024 12:40:49 PAGE 4   

 176   4                          EEPROM[i] = EEPROM_read(i);
 177   4                      }
 178   3                      EEPROM_Pass = (EEPROM[5]*100000) + (EEPROM[4]*10000) + (EEPROM[3]*1000) + (EEPROM[2]*100) 
             -+ (EEPROM[1]*10) + (EEPROM[0]);
 179   3                      for(i = 0; i < 6; i++) {
 180   4                          old_password[i] = keypad();
 181   4                          lcd_showchar(1, i, old_password[i]);
 182   4                      }
 183   3                      Delay1(2000);
 184   3                      old_pin = (old_password[5]*100000) + (old_password[4]*10000) + (old_password[3]*1000) + (o
             -ld_password[2]*100) + (old_password[1]*10) + (old_password[0]);
 185   3                      if(old_pin == EEPROM_Pass) {
 186   4                          EEPROM_write(212, 0xFF);
 187   4                          lcd_clear();
 188   4                          current_state = generate_password;
 189   4                          break;
 190   4                      } else {
 191   4                          if(Flag < 3) {
 192   5                              lcd_clear();
 193   5                              lcd_showstring(0, 0, "Wrong Password");
 194   5                              lcd_shownum(1, 5, Flag1, 1);
 195   5                              Beep(10);
 196   5                              Flag1++;
 197   5                              current_state = new_password;
 198   5                          } else {
 199   5                              EEPROM_write(250, 6);
 200   5                              lcd_clear();
 201   5                              lcd_showstring(0, 0, "System Disabled");
 202   5                              Beep(5000);
 203   5                          }
 204   4                      }
 205   3                      break;
 206   3              }
 207   2          }
 208   1      }
 209          
 210          
 211          
 212          
 213          

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
